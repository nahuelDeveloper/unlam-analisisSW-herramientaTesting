/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package herramienta;
import java.io.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author Kevin
 */
public class Halstead extends javax.swing.JFrame {

    private File nombreArchivo,archivoOperandos=null;
    private ArrayList<Operador> listaOp;
    private int N,n,n1=0,n2=0,N1=0,N2=0;
    private double volumen,esfuerzo;
    
    public Halstead(TesterDeCodigo tester) throws IOException {
        try {
            initComponents();
            nombreArchivo = tester.getNombreArchivo();
            
            archivoOperandos = new File("operandos.txt");
            FileReader fr = null;
            BufferedReader br = null;
            listaOp = new ArrayList<Operador>();
           
            fr = new FileReader(archivoOperandos);
            br = new BufferedReader(fr);
            String linea = new String();
            Operador aux;
            linea=br.readLine();
            while(linea != null){
                aux = new Operador(linea);
                listaOp.add(aux);
                linea = br.readLine();
            }
            
            ////////////////////////////////////
            fr = null;
            br = null;
                       
            fr = new FileReader(nombreArchivo);
            br = new BufferedReader(fr);
            
            linea=br.readLine();
            String campos[];
            while(linea != null){
                for (Operador operador : listaOp) {
                   if(operador.getNombre().equals("+") || operador.getNombre().equals("|") || 
                           operador.getNombre().equals("*") || operador.getNombre().equals("+=")
                           || operador.getNombre().equals("*=")){
                               
                                campos=linea.split("\\"+operador.getNombre());
                   
                   }
                   else{
                       if(operador.getNombre().equals("++"))
                           campos=linea.split("\\+\\+");
                       else {
                           if(operador.getNombre().equals("||")) {
                              campos=linea.split("\\|\\|"); 
                               
                               }
                           else
                                campos=linea.split(operador.getNombre());     
                       }
              }
                   operador.contar(campos.length-1);
                      
            }
             linea = br.readLine();        
            
      }
         for (Operador operator : listaOp) {
             
         if(operator.getContador()!=0){
             
             n1++;
             N1+=operator.getContador();
         }
             
         
         }
         N2=20;
         n2=12;
         ta_halstead.append("Resultado Halstead:"+"\n");
         ta_halstead.append("Cantidad de operadores únicos (n1): "+ n1 +"\n");
         ta_halstead.append("Cantidad de ocurrencias de operadores  (N1): "+ N1 +"\n");
         ta_halstead.append("Cantidad de operandos únicos (n2): "+ n2 +"\n");
         ta_halstead.append("Cantidad de ocurrencias de operandos  (N2): "+ N2 +"\n");
         
         N = N1+N2;
         
         ta_halstead.append("Longitud (N): "+ N +"\n");
         
         n = n1+n2;
         
         volumen = N*(Math.log(n)/Math.log(2));
         
         ta_halstead.append("Volumen (V): "+ Math.rint(volumen) +"\n");
         
         esfuerzo = volumen/(0.9);
         
         ta_halstead.append("Esfuerzo (E): "+ Math.rint(esfuerzo) +"\n");
         
         ta_halstead.append("\n"+"Operadores Halstead:"+"\n");
         for (Operador operador : listaOp) {
                    ta_halstead.append(operador.getNombre() + ": "+ operador.getContador()+"\n");
                }  
         
         
         
         
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Halstead.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_halstead = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Halstead");

        ta_halstead.setColumns(20);
        ta_halstead.setRows(5);
        jScrollPane1.setViewportView(ta_halstead);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(311, 311, 311)
                .addComponent(jLabel1)
                .addContainerGap(354, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Halstead.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Halstead.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Halstead.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Halstead.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea ta_halstead;
    // End of variables declaration//GEN-END:variables
}
